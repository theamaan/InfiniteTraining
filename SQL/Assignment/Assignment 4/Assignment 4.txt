--Q1 :- Write a T-SQL Program to find the factorial of a given number.

create proc sp_CalculateFactorial
    @Number int,
    @Factorial bigint output
AS
BEGIN
    DECLARE @Counter int;
    SET @Factorial = 1;
    SET @Counter = 1;

    WHILE @Counter <= @Number
    BEGIN
        SET @Factorial = @Factorial * @Counter;
        SET @Counter = @Counter + 1;
    END
END;
GO

--Q2 :- Create a stored procedure to generate multiplication table that accepts a number and generates up to a given number. 

DECLARE @Result BIGINT;
EXEC sp_CalculateFactorial @Number = 5, @Factorial = @Result OUTPUT;
PRINT 'The factorial is ' + CAST(@Result AS VARCHAR(20));

create proc sp_GenerateMultiplicationTable
    @Number int,
    @Limit int
as
begin
    -- Declare a variable to hold the current multiplier
    DECLARE @Multiplier INT;
    SET @Multiplier = 1;

    PRINT 'Multiplication Table for ' + CAST(@Number AS VARCHAR(10)) + ':';

    WHILE @Multiplier <= @Limit
    BEGIN
        PRINT CAST(@Number AS VARCHAR(10)) + ' * ' + CAST(@Multiplier AS VARCHAR(10)) + ' = ' + CAST(@Number * @Multiplier AS VARCHAR(10));
        SET @Multiplier = @Multiplier + 1;
    END
END;
GO

EXEC sp_GenerateMultiplicationTable @Number = 10, @Limit = 10;

Q3:- Create a trigger to restrict data manipulation on EMP table during General holidays. Display the error message like “Due to Independence day you cannot manipulate data” or "Due To Diwali", you cannot manipulate" etc

Note: Create holiday table as (holiday_date,Holiday_name) store at least 4 holiday details. try to match and stop manipulation 

CREATE TRIGGER trg_RestrictOnHolidays
ON EMP
INSTEAD OF INSERT, UPDATE, DELETE
AS
BEGIN
    DECLARE @Today DATE = CAST(GETDATE() AS DATE);
    DECLARE @HolidayName VARCHAR(50);

    SELECT @HolidayName = holiday_name
    FROM Holidays
    WHERE holiday_date = @Today;

    IF @HolidayName IS NOT NULL
    BEGIN
        RAISERROR ('Due to %s, you cannot manipulate data', 16, 1, @HolidayName);
        ROLLBACK TRANSACTION;
    END
    ELSE
    BEGIN
        -- Proceed with the original operation
        IF EXISTS (SELECT * FROM inserted)
        BEGIN
            -- For INSERT or UPDATE operations
            INSERT INTO EMP (EMPNO, ENAME, JOB, MGR_ID, HIREDATE, SAL, COMM, DEPTNO)
            SELECT EMPNO, ENAME, JOB, MGR_ID, HIREDATE, SAL, COMM, DEPTNO
            FROM inserted;
        END

        IF EXISTS (SELECT * FROM deleted)
        BEGIN
            -- For DELETE operations
            DELETE FROM EMP
            WHERE EMPNO IN (SELECT EMPNO FROM deleted);
        END
    END
END;

